{% import 'common.yml.j2' as common %}

{%- block name -%}
# Template is at:    .github/templates/docker_builds_ci_workflow.yml.j2
# Generation script: .github/scripts/generate_ci_workflows.py
name: !{{ build_environment }}
{%- endblock %}

on:
  workflow_dispatch:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - '.circleci/docker/**'
      - '.github/workflows/generated-docker-builds.yml'
{%- if is_scheduled %}
  schedule:
    - cron: !{{ is_scheduled }}
{%- endif %}
!{{ common.concurrency(build_environment) }}

env:
  ALPINE_IMAGE: "308535385114.dkr.ecr.us-east-1.amazonaws.com/tool/alpine"
  AWS_DEFAULT_REGION: us-east-1

jobs:
{% block docker_build +%}
  docker-build:
    runs-on: linux.2xlarge
    timeout-minutes: !{{ common.timeout_minutes }}
    strategy:
      matrix:
        include:
          {%- for docker_image in docker_images %}
            - docker_image_base: '!{{ docker_image }}'
              docker_image_short_name: '!{{ docker_image.split('/')[-1] }}'
          {%- endfor %}
    env:
      DOCKER_IMAGE_BASE: '${{ matrix.docker_image_base }}'
    name: docker-build (${{ matrix.docker_image_short_name }})
    steps:
      !{{ common.setup_ec2_linux() }}
      !{{ common.checkout() }}
      !{{ common.calculate_docker_image(true) }}
      - name: Pull Docker image
        run: |
          !{{ common.add_retry_to_env() }}
          retry docker pull "${DOCKER_IMAGE}"
      !{{ common.parse_ref() }}
      !{{ common.teardown_ec2_linux() }}
      - name: Hold runner for 2 hours or until ssh sessions have drained
        # Always hold for active ssh sessions
        if: always()
        run: .github/scripts/wait_for_ssh_to_drain.sh
      - name: Clean up docker images
        if: always()
        run: |
          # Prune all of the docker images
          docker system prune -af
{%- endblock %}
