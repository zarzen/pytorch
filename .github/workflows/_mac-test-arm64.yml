name: mac-test-arm64

on:
  workflow_call:
    inputs:
      build-environment:
        required: true
        type: string
        description: Top-level label for what's being built/tested.


jobs:
  run_mps_test:
    name: "Run MPS tests"
    runs-on: macos12.3-m1
    steps:
      - name: Checkout PyTorch
        uses: malfet/checkout@silent-checkout
        with:
          ref: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.sha || github.sha }}
          quiet-checkout: true

      - name: Clean checkout
        shell: arch -arch arm64 bash {0}
        run: |
          git clean -fxd

      - name: Download build artifacts
        uses: ./.github/actions/download-build-artifacts
        with:
          name: ${{ inputs.build-environment }}
          use-gha: true

      - name: Install PyTorch
        env:
          ENV_NAME: conda-test-env-${{ github.run_id }}
          PY_VERS: 3.8
        shell: arch -arch arm64 bash {0}
        run: |
          # shellcheck disable=SC1090
          . ~/miniconda3/etc/profile.d/conda.sh
          set -ex
          conda create -yp "${ENV_NAME}" "python=${PY_VERS}" numpy expecttest
          # As wheels are cross-compiled they are reported as x86_64 ones
          ORIG_WHLNAME=$(ls -1 dist/*.whl); ARM_WHLNAME=${ORIG_WHLNAME/x86_64/arm64}; mv ${ORIG_WHLNAME} ${ARM_WHLNAME}
          conda run -p "${ENV_NAME}" python3 -mpip install dist/*.whl

      - name: Run MPS tests
        env:
          ENV_NAME: conda-test-env-${{ github.run_id }}
        shell: arch -arch arm64 bash {0}
        run: |
          # shellcheck disable=SC1090
          . ~/miniconda3/etc/profile.d/conda.sh
          set -ex
          conda run --cwd test -p "${ENV_NAME}" python3 test_mps.py -v
          conda env remove -p "${ENV_NAME}"
