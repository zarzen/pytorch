load("//third_party:glog.buck.bzl", "define_glog")
load("//third_party:xnnpack.buck.bzl", "define_xnnpack")

define_glog()

define_xnnpack()

cxx_library(
    name = "fmt",
    srcs = ['fmt/src/format.cc'],
    deps = [],
    compiler_flags = ['-w', '-Wno-error=format-zero-length', '-Wno-error=vla', '-Wno-incompatible-pointer-types-discards-qualifiers', '-Wno-unused-label', '-Wno-deprecated-declarations', '-Wno-implicit-function-declaration', '-Wno-error', '-Wno-non-pod-varargs', '-Wno-format-security', '-Wno-c++11-narrowing', '-Wno-ignored-attributes', '-Wno-return-std-move', '-Wno-shadow', '-Wno-sign-compare', '-Wno-switch', '-Wno-undef', '-Wno-uninitialized', '-Wno-unknown-pragmas', '-Wno-unknown-warning-option', '-Wno-unused-function', '-Wno-unused-local-typedef', '-Wno-unused-value', '-Wno-unused-variable', '-Wno-register', '-Wno-format', '-Wno-unused-lambda-capture', '-Wno-missing-braces', '-Wno-unused-parameter', '-Wno-unreachable-code', '-Wno-inconsistent-missing-destructor-override', '-Wno-implicit-fallthrough', '-Wno-ignored-qualifiers', '-Wno-pedantic', '-Wno-deprecated-copy', '-Wno-non-virtual-dtor', '-Wno-null-pointer-arithmetic', '-Wno-implicit-const-int-float-conversion', '-Wno-tautological-unsigned-enum-zero-compare', '-Wno-embedded-directive', '-Wno-int-conversion', '-Wno-nonnull', '-Wno-variadic-macros', '-Wno-zero-length-array', '-Wno-missing-prototypes', '-fno-exceptions', '-fno-rtti', '-Wno-braced-scalar-init', '-fvisibility-inlines-hidden'],
    preferred_linkage = "static",
    exported_preprocessor_flags = ['-DFMT_EXCEPTIONS=0'],
    header_namespace = "third_party/fmt",
    public_system_include_directories = ['fmt/include'],
    raw_headers = glob(["fmt/include/fmt/*.h"]),
    soname = "libthird-party_fmt_fmt.$(ext)",
    visibility = ['PUBLIC'],
)

cxx_library(
    name = "pthreadpool",
    srcs = ['pthreadpool/src/legacy-api.c', 'pthreadpool/src/memory.c', 'pthreadpool/src/portable-api.c', 'pthreadpool/src/pthreads.c'],
    deps = [
        ":FXdiv",
        ":pthreadpool_header",
    ],
    compiler_flags = [
        "-w",
        "-Os",
        "-fstack-protector-strong",
        "-fno-delete-null-pointer-checks"
    ],
    headers = {
        'threadpool-atomics.h': 'pthreadpool/src/threadpool-atomics.h',
        'threadpool-common.h': 'pthreadpool/src/threadpool-common.h',
        'threadpool-object.h': 'pthreadpool/src/threadpool-object.h',
        'threadpool-utils.h': 'pthreadpool/src/threadpool-utils.h',
    },
    header_namespace = "",
    preferred_linkage = "static",
    link_whole = False,
    platform_preprocessor_flags = [['windows', ['-D_WINDOWS', '-D_WIN32', '-DWIN32', '-DNOMINMAX', '-D_CRT_SECURE_NO_WARNINGS', '-D_USE_MATH_DEFINES']], ['windows.*64$', ['-D_WIN64']]],
    preprocessor_flags = ['-DPTHREADPOOL_USE_FUTEX=0', '-DPTHREADPOOL_USE_GCD=0'],
    reexport_all_header_dependencies = True,
    visibility = ['PUBLIC'],
)

cxx_library(
    name = "pthreadpool_header",
    header_namespace = "",
    exported_headers = {
        "pthreadpool.h": "pthreadpool/include/pthreadpool.h",
    },
    reexport_all_header_dependencies = True,
    visibility = ["PUBLIC"],
)

cxx_library(
    name = "FXdiv",
    header_namespace = "",
    exported_headers = {
        "fxdiv.h": "FXdiv/include/fxdiv.h",
    },
    reexport_all_header_dependencies = True,
    visibility = ["PUBLIC"],
)

cxx_library(
    name = "psimd",
    header_namespace = "",
    exported_headers = {
        "psimd.h": "psimd/include/psimd.h",
    },
    preferred_linkage = "static",
    visibility = ["PUBLIC"],
)

cxx_library(
    name = "cpuinfo",
    srcs = [
        "cpuinfo/wrappers/api.c",
        "cpuinfo/wrappers/arm/android/properties.c",
        "cpuinfo/wrappers/arm/cache.c",
        "cpuinfo/wrappers/arm/linux/aarch32-isa.c",
        "cpuinfo/wrappers/arm/linux/aarch64-isa.c",
        "cpuinfo/wrappers/arm/linux/chipset.c",
        "cpuinfo/wrappers/arm/linux/clusters.c",
        "cpuinfo/wrappers/arm/linux/cpuinfo.c",
        "cpuinfo/wrappers/arm/linux/hwcap.c",
        "cpuinfo/wrappers/arm/linux/init.c",
        "cpuinfo/wrappers/arm/linux/midr.c",
        "cpuinfo/wrappers/arm/mach/init.c",
        "cpuinfo/wrappers/arm/uarch.c",
        "cpuinfo/wrappers/cache.c",
        "cpuinfo/wrappers/init.c",
        "cpuinfo/wrappers/linux/cpulist.c",
        "cpuinfo/wrappers/linux/multiline.c",
        "cpuinfo/wrappers/linux/processors.c",
        "cpuinfo/wrappers/linux/smallfile.c",
        "cpuinfo/wrappers/mach/topology.c",
        "cpuinfo/wrappers/x86/cache/descriptor.c",
        "cpuinfo/wrappers/x86/cache/deterministic.c",
        "cpuinfo/wrappers/x86/cache/init.c",
        "cpuinfo/wrappers/x86/info.c",
        "cpuinfo/wrappers/x86/init.c",
        "cpuinfo/wrappers/x86/isa.c",
        "cpuinfo/wrappers/x86/linux/cpuinfo.c",
        "cpuinfo/wrappers/x86/linux/init.c",
        "cpuinfo/wrappers/x86/mach/init.c",
        "cpuinfo/wrappers/x86/name.c",
        "cpuinfo/wrappers/x86/topology.c",
        "cpuinfo/wrappers/x86/uarch.c",
        "cpuinfo/wrappers/x86/vendor.c",
        "cpuinfo/wrappers/x86/windows/init.c",
    ],
    include_directories = ["cpuinfo/src"],
    public_include_directories = ["cpuinfo/include"],
    raw_headers = glob([
        "cpuinfo/src/**/*.h",
        "cpuinfo/src/**/*.c",
    ]),
    preferred_linkage = "static",
    preprocessor_flags = [
        "-DCPUINFO_LOG_LEVEL=2",
        "-D_GNU_SOURCE=1",
    ],
    visibility = ["PUBLIC"],
    deps = [
        ":clog",
    ],
)

cxx_library(
    name = "clog",
    srcs = [
        "cpuinfo/deps/clog/src/clog.c",
    ],
    raw_headers = glob([
        "cpuinfo/deps/clog/include/*.h",
    ]),
    public_include_directories = [
        "cpuinfo/deps/clog/include/",
    ],
    force_static = True,
    visibility = ["PUBLIC"],
)

cxx_library(
    name = "FP16",
    raw_headers = glob([
        "FP16/include/*.h",
    ]),
    public_include_directories = [
        "FP16/include/",
    ],
    force_static = True,
    visibility = ["PUBLIC"],
)


cxx_library(
    name = "miniz",
    srcs = ["miniz-2.0.8/miniz.c"],
    header_namespace = "",
    exported_headers = {"miniz.h": "miniz-2.0.8/miniz.h"},
    exported_preprocessor_flags = [
        "-DMINIZ_DISABLE_ZIP_READER_CRC32_CHECKS",
    ],
    visibility = ["PUBLIC"],
)

remote_file(
  name = "typing-extensions-download",
  url = "https://files.pythonhosted.org/packages/75/e1/932e06004039dd670c9d5e1df0cd606bf46e29a28e65d5bb28e894ea29c9/typing_extensions-4.2.0-py3-none-any.whl",
  sha1 = "ff0849420e94f425818bff5d0f25e3cdfaba8601",
  out = "typing_extensions-4.2.0-py3-none-any.whl",
)

prebuilt_python_library(
  name = "typing-extensions",
  binary_src = ":typing-extensions-download",
  visibility = ["PUBLIC"],
  deps = [":typing-extensions-download"],
)

remote_file(
  name = "pyyaml-download",
  url = "https://files.pythonhosted.org/packages/12/fc/a4d5a7554e0067677823f7265cb3ae22aed8a238560b5133b58cda252dad/PyYAML-6.0-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl",
  sha1 = "11aa9c5fe2d890b6a73212beadc7c8a4265ebc39",
  out = "pyyaml.whl",
)

prebuilt_python_library(
  name = "pyyaml",
  binary_src = ":pyyaml-download",
  visibility = ["PUBLIC"],
  deps = [":pyyaml-download"],
)

cxx_library(
    name = "ruy_lib",
    srcs = glob(
        ["ruy/**/*.cc"],
        exclude = [
            "ruy/ruy/test_*.cc",
            "ruy/ruy/*_test.cc",
            "ruy/example/*.cc",
            "ruy/ruy/profiler/test.cc",
            "ruy/ruy/benchmark.cc",
        ],
    ),
    compiler_flags = ["-Os"],
    preferred_linkage = "static",
    public_include_directories = ["ruy"],
    raw_headers = glob(["ruy/**/*.h"]),
    visibility = [
        "PUBLIC",
    ],
)
